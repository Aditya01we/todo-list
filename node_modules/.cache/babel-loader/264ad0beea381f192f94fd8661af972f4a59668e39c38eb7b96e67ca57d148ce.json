{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\Desktop\\\\todo-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskForm from \"./components/Taskform\";\nimport TaskList from \"./components/TaskList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Add new task\n  const addTask = task => {\n    setTasks([...tasks, {\n      id: Date.now(),\n      text: task,\n      completed: false\n    }]);\n  };\n\n  // Toggle task completion\n  const toggleTask = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n\n  // Delete task\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${darkMode ? \"dark-mode\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dark-mode-toggle\",\n      onClick: () => setDarkMode(!darkMode),\n      children: darkMode ? \"Light Mode\" : \"Dark Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCDD To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      toggleTask: toggleTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"F+ChHO6ohqAXEURlcddK6rZIflg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","darkMode","setDarkMode","addTask","task","id","Date","now","text","completed","toggleTask","map","deleteTask","filter","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adity/Desktop/todo-list/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TaskForm from \"./components/Taskform\";\nimport TaskList from \"./components/TaskList\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Add new task\n  const addTask = (task) => {\n    setTasks([...tasks, { id: Date.now(), text: task, completed: false }]);\n  };\n\n  // Toggle task completion\n  const toggleTask = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completed: !task.completed } : task\n      )\n    );\n  };\n\n  // Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  return (\n    <div className={`app-container ${darkMode ? \"dark-mode\" : \"\"}`}>\n      <button className=\"dark-mode-toggle\" onClick={() => setDarkMode(!darkMode)}>\n        {darkMode ? \"Light Mode\" : \"Dark Mode\"}\n      </button>\n      <h1>üìù To-Do List</h1>\n      <TaskForm addTask={addTask} />\n      <TaskList tasks={tasks} toggleTask={toggleTask} deleteTask={deleteTask} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAMW,OAAO,GAAIC,IAAI,IAAK;IACxBJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEM,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEC,IAAI,EAAEJ,IAAI;MAAEK,SAAS,EAAE;IAAM,CAAC,CAAC,CAAC;EACxE,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIL,EAAE,IAAK;IACzBL,QAAQ,CACND,KAAK,CAACY,GAAG,CAAEP,IAAI,IACbA,IAAI,CAACC,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGD,IAAI;MAAEK,SAAS,EAAE,CAACL,IAAI,CAACK;IAAU,CAAC,GAAGL,IAC7D,CACF,CAAC;EACH,CAAC;;EAED;EACA,MAAMQ,UAAU,GAAIP,EAAE,IAAK;IACzBL,QAAQ,CAACD,KAAK,CAACc,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;EAED,oBACET,OAAA;IAAKkB,SAAS,EAAE,iBAAiBb,QAAQ,GAAG,WAAW,GAAG,EAAE,EAAG;IAAAc,QAAA,gBAC7DnB,OAAA;MAAQkB,SAAS,EAAC,kBAAkB;MAACE,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAAC,CAACD,QAAQ,CAAE;MAAAc,QAAA,EACxEd,QAAQ,GAAG,YAAY,GAAG;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACTxB,OAAA;MAAAmB,QAAA,EAAI;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBxB,OAAA,CAACH,QAAQ;MAACU,OAAO,EAAEA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BxB,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACW,UAAU,EAAEA,UAAW;MAACE,UAAU,EAAEA;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjCID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}